{
  "$schema": "http://json-schema.org/schema",
  "id": "Skeleton component with test",
  "title": "Skeleton component with test Options",
  "type": "object",
  "description": "Creates a new generic component definition in the given or default project.",
  "additionalProperties": false,
  "properties": {
    "path": {
      "type": "string",
      "format": "path",
      "description": "The path at which to create the component file, relative to the current workspace. Default is a folder with the same name as the component in the project root.",
      "visible": false
    },
    "testPath": {
      "type": "string",
      "format": "path",
      "description": "The path at which to create the component file, relative to the current workspace. Default is a folder with the same name as the component in the project root.",
      "visible": false,
      "x-prompt": "choose test path"
    },
    "project": {
      "type": "string",
      "description": "The name of the project.",
      "$default": {
        "$source": "projectName"
      }
    },
    "flat": {
      "type": "boolean",
      "description": "Create the new files at the top level of the current project.",
      "default": false
    },
    "name": {
      "type": "string",
      "description": "The name of the component.",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What name would you like to use for the component?"
    },
    "component-type": {
      "type": "string",
      "description": "Adds a developer-defined type to the filename, in the format \"name.type.ts\".",
      "default": "Component"
    },
    "component-test-type": {
      "type": "string",
      "description": "Adds a developer-defined type to the filename, in the format \"name.type.ts\".",
      "default": "ComponentUiTest"
    },
    "test-type": {
      "type": "string",
      "description": "Adds a developer-defined type to the filename, in the format \"name.type.ts\".",
      "default": "component",
      "enum": [
        "page",
        "pattern",
        "component"
      ]
    },
    "module": {
      "type": "string",
      "description": "The declaring NgModule.",
      "alias": "m"
    },
    "testModule": {
      "type": "string",
      "description": "The declaring NgModule of test.",
      "alias": "tm"
    },
    "route": {
      "type": "string",
      "description": "The route path for a lazy-loaded module. When supplied, creates a component in the new module, and adds the route to that component in the `Routes` array declared in the module provided in the `--module` option."
    },
    "export": {
      "type": "boolean",
      "default": false,
      "description": "The declaring NgModule exports this component.",
      "x-prompt": "Would you like you export the component"
    },
    "skipTestCases": {
      "type": "boolean",
      "default": false,
      "description": "Adding rich text test cases file and prefix an id to the routing",
      "x-prompt": "Would you like to skip rich text test cases file and prefix /:testcaseId to routing"
    }
  },
  "required": [
    "name"
  ]
}
