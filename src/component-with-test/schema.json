{
  "$schema": "http://json-schema.org/schema",
  "id": "Skeleton component with test",
  "title": "Skeleton component with test Options",
  "type": "object",
  "description": "Creates a new generic component definition in the given or default project.",
  "additionalProperties": false,
  "properties": {
    "path": {
      "type": "string",
      "format": "path",
      "description": "The path at which to create the component file, relative to the current workspace. Default is a folder with the same name as the component in the project root.",
      "visible": false,
      "x-prompt": "Enter component path"
    },
    "project": {
      "type": "string",
      "description": "The name of the project.",
      "$default": {
        "$source": "projectName"
      }
    },
    "flat": {
      "type": "boolean",
      "description": "Create the new files at the top level of the current project.",
      "default": false
    },
    "name": {
      "type": "string",
      "description": "The name of the component.",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What name would you like to use for the component?"
    },
    "style": {
      "description": "The file extension or preprocessor to use for style files.",
      "type": "string",
      "default": "scss",
      "enum": ["css", "scss", "sass", "less", "styl"],
      "x-user-analytics": 5
    },
    "selector": {
      "type": "string",
      "format": "html-selector",
      "description": "The HTML selector to use for this component."
    },
    "module": {
      "type": "string",
      "description": "The declaring NgModule.",
      "alias": "m"
    },
    "route": {
      "type": "string",
      "description": "The route path for a lazy-loaded module. When supplied, creates a component in the new module, and adds the route to that component in the `Routes` array declared in the module provided in the `--module` option."
    },
    "export": {
      "type": "boolean",
      "default": false,
      "description": "The declaring NgModule exports this component.",
      "x-user-analytics": 19,
      "x-prompt": "Would you like you export the component"
    },
    "testPath": {
      "type": "string",
      "format": "path",
      "description": "The path at which to create the component test file, relative to the current workspace. Default is a folder with the same name as the component in the project root.",
      "visible": false,
      "x-prompt": "Enter component Test Path"
    },
    "type": {
      "type": "string",
      "description": "Adds a developer-defined type to the filename, in the format \"name.type.ts\".",
      "default": "Component"
    },
    "componentTestType": {
      "type": "string",
      "description": "Adds a developer-defined type to the filename, in the format \"name.type.ts\".",
      "default": "ComponentUiTest"
    },
    "uiTestType": {
      "description": "test options type ya wala",
      "default": "component",
      "type": "string",
      "enum": ["page", "pattern", "component"],
      "x-prompt": {
        "message": "Which test type would you like to use?",
        "type": "list",
        "items": [
          { "value": "page", "label": "page" },
          {
            "value": "pattern",
            "label": "pattern"
          },
          {
            "value": "component",
            "label": "component"
          }
        ]
      },
      "x-user-analytics": 5
    },
    "skipTestCases": {
      "type": "boolean",
      "default": false,
      "description": "Adding test cases file and prefix an id to the routing",
      "x-prompt": "Would you like to skip  test cases file and prefix /:testcaseId to routing"
    },
    "libName": {
      "type": "string",
      "description": "lib name to be added in getTestingRoute",
      "x-prompt": "Enter your lib name to be added in Testing Route"
    }
  },
  "required": ["name"]
}
